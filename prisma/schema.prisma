// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique // matches kinde user id
  email String  @unique
  userId String
  profilePic Image?
}

enum uploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model Image {
  id String @id @default(cuid())
  name String
  uploadStatus uploadStatus @default(PENDING)
  url String
  key String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User @relation(fields: [userId], references: [id])
  userId String @unique
}

model Chat {
  id String @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages Message[]
}

model Message {
  id String @id @default(cuid())
  senderId String
  receiverId String
  text String
  timestamp DateTime @default(now())
  chat Chat @relation(fields: [chatId], references: [id])
  chatId String

  @@index([chatId])
}