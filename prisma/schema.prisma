// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id             String     @id @unique // matches kinde user id
  email          String     @unique
  userId         String
  profilePic     Image?
  mainInfo       MainInfo?
  basicInfo      BasicInfo?
  mainInfoAdded  Boolean    @default(false)
  basicInfoAdded Boolean    @default(false)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model MainInfo {
  user         User   @relation(fields: [userId], references: [id])
  userId       String @unique
  curiousAbout String
  excitedAbout String
  profilePic   String
}

model BasicInfo {
  user              User     @relation(fields: [userId], references: [id])
  userId            String   @unique
  pronouns          String
  workingOnOwnIdeas String
  milestones        String
  viralThing        String
  projectProgress   String
  images            String[]
}

enum uploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model Image {
  id           String       @id @default(cuid())
  name         String
  uploadStatus uploadStatus @default(PENDING)
  url          String
  key          String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  User         User         @relation(fields: [userId], references: [id])
  userId       String       @unique
}

model AIChat {
  id        String      @id @default(cuid())
  title String 
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String      
}

model AIMessage {
  id            String  @id @default(cuid())
  userId        String
  text          String
  isUserMessage Boolean
  timestamp DateTime @default(now())
  chatId  String 

  @@index([userId])
}
